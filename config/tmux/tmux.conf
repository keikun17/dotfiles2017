# remap prefix to Control + a
  set -g prefix C-a
  unbind C-b
  bind C-a send-prefix

# force a reload of the config file
  unbind r
  bind r source-file ~/.tmux.conf

# PANE CONTROL =================================================================
# Tmux window numbering starts with '1'
  set -g base-index 1
  set -g pane-base-index 1

  bind-key h select-pane -L
  bind-key j select-pane -D
  bind-key k select-pane -U
  bind-key l select-pane -R

# quick pane cycling
  unbind ^A
  bind ^A select-pane -t :.+

# Resize Bindings
  bind < resize-pane -L 4
  bind > resize-pane -R 4
  unbind ( # Was bound to a tmux session-control function
  bind ( resize-pane -D 4
  unbind ) # Was bound to a tmux session-control function
  bind ) resize-pane -U 4

# splits
  bind-key s split-window -v
  bind-key v split-window -h

# MOUSE ========================================================================
  set-option -g mouse on

# COPY MODE ====================================================================

  if-shell 'test "$(uname)" = "Darwin"' 'source ~/.config/tmux/tmux-osx.conf'
  if-shell 'test "$(uname)" = "Linux"' 'source ~/.config/tmux/tmux-linux.conf'

# Sending save-buffer contents back to remote client
# Source : http://superuser.com/questions/407888/synchronize-pasteboard-between-remote-tmux-session-and-local-mac-os-pasteboard
# bind C-c run "tmux save-buffer - | ssh -p 1234 localhost pbcopy"

# LOOK AND FEEL ================================================================

# Tell tmux we can use 256 colors
  set -g default-terminal "screen-256color"

  set -g status-left-length 52
  set -g status-right-length 451
  set -g status-interval 60
  set -g status-fg white
  set -g status-bg colour234
  set -g window-status-activity-attr bold
  set -g pane-border-fg colour245
  set -g pane-active-border-fg colour39
  set -g message-fg colour16
  set -g message-bg colour221
  set -g message-attr bold
  set -g status-left '#[fg=colour235,bg=colour252,bold] ❐ #S #[fg=colour252,bg=colour238,nobold]⮀#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]⮀'
  set -g window-status-format "#[fg=white,bg=colour234] #I #W "
  set -g window-status-current-format "#[fg=colour234,bg=colour39]⮀#[fg=colour25,bg=colour39,noreverse,bold] #I ⮁ #W #[fg=colour39,bg=colour234,nobold]⮀"

# show uptime in lower right
  set -g status-right '#[fg=yellow]#(uptime | cut -d "," -f 2-)'

# Do not resize window when pair / other sessions are not looking at the window
  setw -g aggressive-resize on

# Do not wait for escape sequence
  set -s escape-time 0

# Scrollback historu line count
  set-option -g history-limit 5000

# tmux messages are displayed for 4 seconds
  set -g display-time 6000

# When multiple users are logged on but viewing different windows, do not resize to smallest
  setw -g aggressive-resize on

# Clear screen and scrollback
# https://github.com/keikun17/kodigo/blob/master/tmux.md
  bind-key b send-keys -R \; clear-history

# Scrolling with mousewheel for tmux 2.1

  bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
  bind -n WheelDownPane select-pane -t= \; send-keys -M

# <VIM-TMUX-NAVIGATION>
# from https://github.com/christoomey/vim-tmux-navigator

# Detecting if the next pane is a vim pane, if it is then jump to itbind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
  is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

  bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
  bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
  bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
  bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
  bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

  # bind -n C-h run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
  # bind -n C-j run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
  # bind -n C-k run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
  # bind -n C-l run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"

  # is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
  # bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
  # bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
  # bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
  # bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
  # bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Remapping the new clear screen to `<C-a> C-l` because `C-l` now moves pane
  bind C-l send-keys 'C-l'

# </VIM-TMUX-NAVIGATION>

  set -g focus-events on
